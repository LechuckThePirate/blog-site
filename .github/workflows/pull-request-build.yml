name: Continuous Integration

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore ./src/BlogSite.sln
    - name: Build
      run: dotnet build ./src/BlogSite.sln --no-restore
    - name: Test
      run: dotnet test ./src/BlogSite.UnitTests/BlogSite.UnitTests.csproj --no-build --verbosity normal
    
    
  build-dockerfiles:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PUBLISH_DOCKER_IMAGE_TOKEN }}

      - name: Build and push API
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/lechuckthepirate/blogsite-api:latest
          file: ./src/BlogSite.Api/Dockerfile
          context: ./src
          
      - name: Build and push WASM
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/lechuckthepirate/blogsite-wasm:latest
          file: ./src/BlogSite.Wasm/Dockerfile
          context: ./src

  deploy-to-main:
    name: Deploy main to host
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.LINUX_HOST_USERNAME }}
          password: ${{ secrets.LINUX_HOST_PASSWORD }}
          port: ${{ secrets.LINUX_HOST_PORT }}
          script: whoami
            

#      - name: Setup .NET
#        uses: actions/setup-dotnet@v3
#        with:
#          dotnet-version: 7.0.x
#      - name: Restore dependencies
#        run: dotnet restore ./src/BlogSite.sln
#      - name: Build WASM DockerFile
#        run: docker build -f ./src/BlogSite.Wasm/Dockerfile -t blogsite-wasm:latest ./src/BlogSite.Wasm
#      - name: Build API DockerFile
#        run: docker build -f ./src/BlogSite.Api/Dockerfile -t blogsite-api:latest ./src/BlogSite.Api
#      - name: Login to ghcr.io
#        run: docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.PUBLISH_DOCKER_IMAGE_TOKEN }} 
#      - name: Push Wasm DockerFile 
#        run: docker push ghcr.io/${{ github.repository }}/blogsite-wasm:latest
#      - name: Push API DockerFile
#        run: docker push ghcr.io/${{ github.repository }}/blogsite-api:latest
#   